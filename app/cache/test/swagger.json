{
    "swagger": "2.0",
    "info": {
        "title": "Trailburning Journey API",
        "contact": {
            "name": "Matt Allbuery",
            "url": "http://www.trailburning.com/",
            "email": "matt@trailburning.com"
        },
        "version": "2.0"
    },
    "basePath": "/v2",
    "consumes": [
        "application/json",
        "multipart/form-data",
        "application/x-www-form-urlencoded"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/events/{id}/assets": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Find assets by event",
                "description": "Returns all assets of a event.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Add an asset",
                "description": "Adds an asset fo an event.",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event the asset belongs to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the asset",
                        "type": "string"
                    },
                    {
                        "name": "about",
                        "in": "formData",
                        "description": "About the asset",
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "formData",
                        "description": "The asset category ID",
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "description": "The sort position, is handled automatically if not specified",
                        "type": "integer"
                    },
                    {
                        "name": "credit",
                        "in": "formData",
                        "description": "The credit of the asset",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation. The Location header contains a link to the new event.",
                        "headers": {
                            "location": {
                                "description": "Link to the new event.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data."
                    }
                }
            }
        },
        "/assets/{id}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Find an asset by ID",
                "description": "Returns a single asset.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the asset to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    },
                    "404": {
                        "description": "Asset not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Assets"
                ],
                "summary": "Update an asset",
                "description": "Updates an asset.",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the asset to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the asset",
                        "type": "string"
                    },
                    {
                        "name": "about",
                        "in": "formData",
                        "description": "About the asset",
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "formData",
                        "description": "The label of the asset category",
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "description": "The sort position, is handled automatically if not specified",
                        "type": "integer"
                    },
                    {
                        "name": "credit",
                        "in": "formData",
                        "description": "The credit of the asset",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid data."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Delete an asset",
                "description": "Deletes the asset.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the asset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Journey not found"
                    }
                }
            }
        },
        "/journeys/{id}/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Find events by journey",
                "description": "Returns all events of a journey.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the journey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "404": {
                        "description": "Journey not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Add an event",
                "description": "Adds an event.",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the journey the event belongs to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the event",
                        "type": "string"
                    },
                    {
                        "name": "about",
                        "in": "formData",
                        "description": "About the event",
                        "type": "string"
                    },
                    {
                        "name": "coords",
                        "in": "formData",
                        "description": "The GPS coordinates of the event in the format '(LNG, LAT)'",
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "description": "The sort position, is handled automatically if not specified",
                        "type": "integer"
                    },
                    {
                        "name": "custom[0][key]",
                        "in": "formData",
                        "description": "The name of the event",
                        "type": "string"
                    },
                    {
                        "name": "custom[0][value]",
                        "in": "formData",
                        "description": "The name of the event",
                        "type": "string"
                    },
                    {
                        "name": "custom[1][key]",
                        "in": "formData",
                        "description": "The name of the event",
                        "type": "string"
                    },
                    {
                        "name": "custom[1][value]",
                        "in": "formData",
                        "description": "The name of the event",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation. The Location header contains a link to the new event.",
                        "headers": {
                            "location": {
                                "description": "Link to the new event.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data."
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Find an event by ID",
                "description": "Returns a single event.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "description": "Updates a event.",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the event",
                        "type": "string"
                    },
                    {
                        "name": "about",
                        "in": "formData",
                        "description": "About the event",
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "description": "The sort position, is handled automatically if not specified",
                        "type": "integer"
                    },
                    {
                        "name": "coords",
                        "in": "formData",
                        "description": "The GPS coordinates of the event",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid data."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "description": "Deletes the event.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Journey not found"
                    }
                }
            }
        },
        "/journeys/{id}": {
            "get": {
                "tags": [
                    "Journeys"
                ],
                "summary": "Find a journey by ID",
                "description": "Returns a single journey.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the journey to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Journey"
                        }
                    },
                    "404": {
                        "description": "journey not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Journeys"
                ],
                "summary": "Update a journey",
                "description": "Updates a journey.",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the journey to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the journey",
                        "type": "string"
                    },
                    {
                        "name": "about",
                        "in": "formData",
                        "description": "About the journey",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "formData",
                        "description": "The ID of the user the journey belongs to",
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "description": "The sort position",
                        "type": "integer"
                    },
                    {
                        "name": "publish",
                        "in": "formData",
                        "description": "Publish this journey",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid data."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Journeys"
                ],
                "summary": "Delete a journey",
                "description": "Deletes the journey.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Journey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Journey not found"
                    }
                }
            }
        },
        "/journeys/user/{id}": {
            "get": {
                "tags": [
                    "Journeys"
                ],
                "summary": "Find journeys by user",
                "description": "Returns all journeys by a user.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Journey"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/journeys/{id}/import/gpx": {
            "post": {
                "tags": [
                    "Journeys"
                ],
                "summary": "Import a GPX file",
                "description": "Imports a GPX file and adds the routes found in the GPX to a journey. Replaces all previous routes.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the journey",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The GPX File to import",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Journey not found"
                    },
                    "400": {
                        "description": "Invalid or empty GPX file."
                    }
                }
            }
        },
        "/journeys/{id}/route_points": {
            "delete": {
                "tags": [
                    "Journeys"
                ],
                "summary": "Delete all route points",
                "description": "Deletes all route points of a journey.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the journey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Journey"
                        }
                    },
                    "404": {
                        "description": "Journey not found"
                    }
                }
            }
        },
        "/journeys": {
            "post": {
                "tags": [
                    "Journeys"
                ],
                "summary": "Add a journey",
                "description": "Adds a journey.",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the journey",
                        "type": "string"
                    },
                    {
                        "name": "about",
                        "in": "formData",
                        "description": "About the journey",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "formData",
                        "description": "The ID of the user the journey belongs to",
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "description": "The sort position, is handled automatically if not specified",
                        "type": "integer"
                    },
                    {
                        "name": "publish",
                        "in": "formData",
                        "description": "Publish this journey, default value is 'false'",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation. The Location header contains a link to the new journey.",
                        "headers": {
                            "location": {
                                "description": "Link to the new event.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data."
                    }
                }
            }
        },
        "/assets/{id}/media": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Add a medias to an asset",
                "description": "Adds a more media file to an asset.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the asset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "media",
                        "in": "formData",
                        "description": "The media File to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Asset not found"
                    },
                    "400": {
                        "description": "Invalid MIME type. File size too large."
                    }
                }
            }
        },
        "/assets/{id}/media/{mediaId}": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Updates the media of an asset",
                "description": "Updates the media of an asset.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the asset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "ID of the media",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "media",
                        "in": "formData",
                        "description": "The media File to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Asset not found. Media not found."
                    },
                    "400": {
                        "description": "Invalid MIME type. File size too large."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Delete a media",
                "description": "Deletes the media.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the asset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "ID of the media",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Asset not found. Media not found"
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "definitions": {
        "Asset": {
            "required": [
                "id",
                "about",
                "category"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Media"
                    }
                },
                "category": {
                    "$ref": "#/definitions/AssetCategory"
                },
                "credit": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Asset"
            }
        },
        "AssetCategory": {
            "required": [
                "name",
                "label"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "AssetCategory"
            }
        },
        "Event": {
            "required": [
                "id",
                "name",
                "about",
                "coords"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "coords": {
                    "description": "point",
                    "type": "Array"
                },
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Asset"
                    }
                },
                "custom": {}
            },
            "xml": {
                "name": "Event"
            }
        },
        "Journey": {
            "required": [
                "id",
                "name",
                "about"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "route_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoutePoint"
                    }
                }
            },
            "xml": {
                "name": "Journey"
            }
        },
        "Media": {
            "required": [
                "id",
                "mimeType",
                "path"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "metadata": {}
            },
            "xml": {
                "name": "Media"
            }
        },
        "RoutePoint": {
            "required": [
                "coords"
            ],
            "properties": {
                "coords": {
                    "description": "point"
                }
            },
            "xml": {
                "name": "RoutePoint"
            }
        }
    }
}